---
export interface Props {
    items: Array<string>;
}
import { Image } from 'astro:assets';


const { items } = Astro.props as Props;
---
<div class="module db-tile-7 mt-5 md:mt-0 mb-5 md:mb-0">
    <div class="customer-list-wrapper">
     {items.map((item, index) => (

      <div class={'div'+index + ' customer-item w-full'}  style={{ order: index + 1 }}>
      <div class={item.color_class + ' customer-item-inner p-5'}>

          <Image src={item.image}
            alt={item.name + ' logo'}
            width="137px"
            height="100%"
            margin="0 auto"
            class="mb-2"
          />
          <div class="customer-item-hidden">
            <p class="mb-4">{item.bio}<p>
            <a href="#" class="text-dd-purple font-light">See More Stories</a>
          </div>
      </div>

      </div>
     ))}
    </ol>
</div>

<style>
    .customer-item { cursor: pointer; height: 186px; }
    .customer-item-hidden { display: none; }
    .active { order: 2; height: auto!important; }
    .active .customer-item-inner { background: #f5f5f5; }
    .active .customer-item-hidden { display: initial; }
    .active img { margin-left: 0!important; margin-bottom: 2em!important; }


    .customer-item-inner {
    	width:100%;
    	height: 100%;
    	align-content: center;
    }
    .customer-item-inner img { margin: 0 auto;}


    .customer-list-wrapper {
        display: grid;
        /*grid-template-columns: repeat(5, 1fr);*/
        grid-template-rows: repeat(3, 1fr);
        grid-column-gap: 0px;
        grid-row-gap: 0px;
    }


    @media screen and (min-width: 992px) {
        .active { grid-area: 1 / 2 / 3; }
    }

    @media screen and (min-width: 1200px) {
        .customer-list-wrapper {
            grid-template-columns: repeat(auto-fit, minmax(176px, 1fr));
            grid-template-rows: repeat(0, 1fr);
        }
        .active { grid-area: 1 / 2 / 3 / 4; }
    }







</style>
<script>

    const customerItems = document.querySelectorAll(".customer-item");

    customerItems.forEach((btn) => {
        btn.addEventListener("click", () => {
            customerItems.forEach((otherBtn) => {
                if (otherBtn !== btn) {
                    otherBtn.classList.remove("active");
                }
            });
            btn.classList.add("active");
        });
    });


</script>







---

import { DEFAULT_LOCALE } from "@src/consts";
import { getCollection } from "astro:content";
import type { CollectionEntry } from "astro:content";
import { getLocale, getLocaleUrlPrefix } from "astro-i18n-aut";


const locale = getLocale(Astro.url) ?? DEFAULT_LOCALE;
const localeUrlPrefix = getLocaleUrlPrefix(Astro.url);

const posts = (await getCollection("customers", (entry) => entry.slug.startsWith(`${locale}/`)))
	.sort((a, b) => a.data.pubDate.valueOf() - b.data.pubDate.valueOf())
	.map<CollectionEntry<"blog"> & { href: string }>((post) => {
		return {
			href: localeUrlPrefix + "/blog" + post.slug.replace(locale, "") + "/",
			...post,
		};
	});
---

<Layout title="Blog">
	<Container class="pt-16">
		<ul class="m-0 grid list-none grid-cols-2 gap-6 p-0">
			{
				posts.map((post: any, index: number) => (
					<li class={`${index === 0 ? "col-span-2 mb-4 w-full text-center" : ""}`}>
						<a href={post.href} class="block transition-colors duration-200">
							<HeroImage
								class={`${index === 0 ? "w-full" : ""} mb-2 rounded-lg hover:shadow-md`}
								src={post.data.heroImage}
								alt={post.data.title}
								width={720}
								height={360}
							/>
							<BlogHeader
								pubDate={post.data.pubDate}
								name={`title-${post.data.title}`}
								isSubheading={true}
								class={`${index === 0 ? "text-xl md:text-2xl lg:text-3xl" : ""} m-0`}>
								{post.data.title}
							</BlogHeader>
						</a>
					</li>
				))
			}
		</ul>
	</Container>
</Layout>


